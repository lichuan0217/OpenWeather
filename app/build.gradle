apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'

    // Android Support
    compile rootProject.ext.dependencies.getAt("supprot-v4")
    compile rootProject.ext.dependencies.getAt("appcompat-v7")
    compile rootProject.ext.dependencies.getAt("design")
    compile rootProject.ext.dependencies.getAt("recyclerview")
    compile rootProject.ext.dependencies.getAt("cardview")
    compile rootProject.ext.dependencies.getAt("gridlayout")
    compile 'com.android.support.constraint:constraint-layout:+'

    // Dagger 2
    compile rootProject.ext.dependencies.getAt("dagger")
    annotationProcessor rootProject.ext.dependencies.getAt("dagger-compiler")

    // RxJava
    compile rootProject.ext.dependencies.getAt("rxandroid")
    compile rootProject.ext.dependencies.getAt("rxjava")

    // Retrofit
    compile rootProject.ext.dependencies.getAt("retrofit")
    compile rootProject.ext.dependencies.getAt("retrofit-converters")
    compile rootProject.ext.dependencies.getAt("retrofit-adapters")
    compile rootProject.ext.dependencies.getAt("converter-gson")
    compile rootProject.ext.dependencies.getAt("adapter-rxjava")
    compile rootProject.ext.dependencies.getAt("okhttp")
    compile rootProject.ext.dependencies.getAt("logging-interceptor")
    compile rootProject.ext.dependencies.getAt("timber")

    // Glide
    compile rootProject.ext.dependencies.getAt("glide")

    // ButterKnife
    annotationProcessor rootProject.ext.dependencies.getAt("butterknife-compiler")
    compile rootProject.ext.dependencies.getAt("butterknife")

    // Custom View
    compile rootProject.ext.dependencies.getAt("circleimageview")
}
